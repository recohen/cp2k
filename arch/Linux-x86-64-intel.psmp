# Author: Alfio Lazzaro (alfio.lazzaro@chem.uzh.ch), UZH, 2018
# Note: add optimization flags specific for your system (e.g. -xHost).

LIBXSMM  = /home/rcohen/CP2K/libxsmm/
LIBXC    = /home/rcohen/libxc/libxc-4.3.4/src/
LIBINT   = /home/rcohen/
LIBELPA  = /home/rcohen/ELPA2019

CC       = icc
FC       = mpiifort
LD       = mpif90
AR       = ar -r
DFLAGS   = -D__MKL -D__FFTW3 -D__LIBXSMM \
	   -D__parallel -D__SCALAPACK \
	   -D__ELPA=201905 \
	   -D__LIBXC -D__SPGLIB \
           -D__LIBINT -D__LIBINT_MAX_AM=7 -D__LIBDERIV_MAX_AM1=6 \
           -D__MAX_CONTR=4
CFLAGS   = $(DFLAGS) -O3 -xknl -g -traceback
CXXFLAGS   = $(DFLAGS) -O3 -xknl -g -traceback
FCFLAGS  = $(DFLAGS) -xknl -O2 -fopenmp -funroll-loops -fpp -free
FCFLAGS += -fp-model precise
FCFLAGS += -g -traceback
FCFLAGS += -I${MKLROOT}/include -I${MKLROOT}/include/fftw -I${MKLROOT}/../mpi/intel64/include/
FCFLAGS += -I$(LIBXSMM)/include -I$(LIBINT)/include
FCFLAGS += -I$(LIBXC)/../objdir/
FCFLAGS += -I$(LIBELPA)/include/elpa/modules -I$(LIBELPA)/include/elpa/elpa
#LDFLAGS  = $(FCFLAGS) -static-intel -static-mpi -link_mpi=opt_mt
LDFLAGS  = $(FCFLAGS) -static-intel  -link_mpi=opt_mt
LDFLAGS_C = $(FCFLAGS) -static-intel -nofor_main
#LIBS     = ${MKLROOT}/../mpi/intel64/lib/release_mt/libmpi.a ${MKLROOT}/../mpi/intel64/lib/libmpifort.a -L$(LIBELPA)/lib -lelpa_openmp -L/home/rcohen/lib -lsymspg
LIBS     =  -L$(LIBELPA)/lib $(LIBELPA)/lib/libelpa_openmp.a /home/rcohen/lib/libsymspg.a 
LIBS    +=  $(LIBXC)/.libs/libxcf03.a  $(LIBXC)/.libs/libxcf90.a $(LIBXC)/.libs/libxc.a
LIBS    += -L$(LIBXSMM)/lib -lirc -lxsmmf -lxsmm -ldl
LIBS    += -L$(LIBINT)/lib -lint2  -lstdc++
LIBS    += -L/home/beegfs/intel/compilers_and_libraries_2020.0.166/linux/mpi/intel64/libfabric/lib   -lfabric
LIBS    +=  ${MKLROOT}/lib/intel64/libmkl_blas95_lp64.a ${MKLROOT}/lib/intel64/libmkl_lapack95_lp64.a ${MKLROOT}/lib/intel64/libmkl_scalapack_lp64.a -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a ${MKLROOT}/lib/intel64/libmkl_core.a ${MKLROOT}/lib/intel64/libmkl_blacs_intelmpi_lp64.a -Wl,--end-group -liomp5 -lpthread -lm -ldl /home/beegfs/intel/compilers_and_libraries_2020.2.254/linux/compiler/lib/intel64_lin/libimf.a

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
			 $(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
